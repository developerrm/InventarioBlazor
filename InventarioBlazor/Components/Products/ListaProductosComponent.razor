@using Entidades
@using Business
<h3>Lista Productos</h3>
<hr/>
<a href="product/create">Crear nuevo producto</a>
<hr />
<select class="form-control" @onchange="CategoriaChanged">
    <option value="">Seleccione una categoria</option>
    @foreach (var categoria in categoriaList)
    {
        <option value="@categoria.CategoriaID">@categoria.Descripcion</option>
    }
</select>

<table class="table table-hover table-bordered">
    <thead>
    <th>Codigo</th>
    <th>Descripcion</th>
    <th>Categoria</th>
    <th>Cantidad</th>
    <th></th>
    </thead>
    <tbody>
        @foreach (var producto in productosList_temp)
        {
            <tr>
                <td>@producto.Codigo</td>
                <td>@producto.Descripcion</td>
                <td>@producto.Categoria.Descripcion</td>
                <td>@producto.CantidadTotal</td>
                <td><a href="/product/Update/@producto.ProductoID">Editar</a></td>
            </tr>
        }
    </tbody>
</table>

@code {
    List<Producto> productosList = new List<Producto>();
    List<Producto> productosList_temp = new List<Producto>();
    List<Categoria> categoriaList = new List<Categoria>();
    string message = "";
    protected override async Task OnParametersSetAsync()
    {
        productosList = BProducto.ProductoList();
        productosList_temp = productosList;
        categoriaList = BCategoria.CategoriaList();
    }
    private void CategoriaChanged(ChangeEventArgs e)
    {
        message = e.Value.ToString();
        if (e.Value.ToString().Length > 0)
            productosList_temp = productosList.Where(x => x.CategoriaID.ToString() == e.Value.ToString()).ToList();
    }
}
